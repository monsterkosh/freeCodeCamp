CSS Flexbox

CSS flexbox has a feature to split a flex item into multiple rows (or columns).

Adding display: flex to an element turns it into a flex container. This makes it possible to align any children of that element into rows or columns.

      display: flex;      // use CSS to position elements in a flexible way
      flex-direction: row / column / row-reverse / column-reverse;


Justify-content Property:

      justify-content:  center;        aligns all the flex items to the center inside the flex container
                        flex-start;    aligns items to the start of the flex container
                        flex-end;      aligns items to the end of the flex container
                        space-between; aligns items to the center of the main axis, with extra space placed between the items
                        space-around;  similar to space-between but the first and last items are not locked to the edges of the container,
                                       the space is distributed around all the items with a half space on either end of the flex container
                        space-evenly;  distributes space evenly between the flex items with a full space at either end of the flex container


Align-items Property:

      align-items:      flex-start;     aligns items to the start of the flex container
                        flex-end;       aligns items to the end of the flex container.
                        center;         align items to the center. For rows, this vertically aligns items (equal space above and below the items)
                        stretch;        stretch the items to fill the flex container
                        baseline;       align items to their baselines. Baseline is a text concept, think of it as the line that the letters sit on.

Flex-wrap property:     tells CSS to wrap items. This means extra items move into a new row or column
                        nowrap: this is the default setting, and does not wrap items.
                        wrap: wraps items from left-to-right if they are in a row, or top-to-bottom if they are in a column.
                        wrap-reverse: wraps items from right-to-left if they are in a row, or bottom-to-top if they are in a column.



Flex Shorthand Property:  The flex-grow, flex-shrink, and flex-basis properties can all be set together by using the flex property
                          flex: 1 0 10px; will set the item to flex-grow: 1;, flex-shrink: 0;, and flex-basis: 10px;

          Flex-shrink Property:   it allows an item to shrink if the flex container is too small.
                                  Items shrink when the width of the parent container is smaller than the combined widths of all the flex items within it.
                                  flex-shrink: 1;     // valores numericos

          Flex-grow Property:     controls the size of items when the parent container expands.
                                  flex-grow: 1;     // valores numericos

          Flex-basis Property:    specifies the initial size of the item before CSS makes adjustments with flex-shrink or flex-grow.
                                  flex-basis: auto, px, em      // The value auto sizes items based on the content.


Order Property:   is used to tell CSS the order of how flex items appear in the flex container.
                  By default, items will appear in the same order they come in the source HTML.
                  The property takes numbers as values, and negative numbers can be used.

Align-self Property:  allows you to adjust each item's alignment individually, instead of setting them all at once.
                      This is useful since other common adjustment techniques using the CSS properties float, clear, and vertical-align
                      do not work on flex items.

                      align-self accepts the same values as align-items and will override any value set by the align-items property.
